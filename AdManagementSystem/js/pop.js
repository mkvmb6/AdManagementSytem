var urlToShow = "http://google.com/"; if (window.jQuery) { var iOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? !0 : !1; if (iOS) { body = $("body"); if (jQuery.fn.on) body.on("click", document, function (a) { }); else jQuery.fn.live && body.live("click", function (a) { }); body.attr("onclick", "").css("cursor", "pointer") } }
var _fh = { initialize: function () { this.ua.initialize() }, ua: { initialize: function () { this.browser = this.searchString(this.list_browser) || "unknown"; this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "unknown"; this.os = this.searchString(this.list_os) || "unknown" }, list_browser: [{ str: navigator.userAgent, subStr: "Chrome", id: "Chrome" }, { str: navigator.userAgent, subStr: "OmniWeb", versionSearch: "OmniWeb/", id: "OmniWeb" }, { str: navigator.vendor, subStr: "Apple", id: "Safari", versionSearch: "Version" }, { prop: window.opera, id: "Opera", versionSearch: "Version" }, { str: navigator.vendor, subStr: "iCab", id: "iCab" }, { str: navigator.vendor, subStr: "KDE", id: "Konqueror" }, { str: navigator.userAgent, subStr: "Firefox", id: "Firefox" }, { str: navigator.vendor, subStr: "Camino", id: "Camino" }, { str: navigator.userAgent, subStr: "Netscape", id: "Netscape" }, { str: navigator.userAgent, subStr: "MSIE", id: "Explorer", versionSearch: "MSIE" }, { str: navigator.userAgent, subStr: "Gecko", id: "Mozilla", versionSearch: "rv" }, { str: navigator.userAgent, subStr: "Mozilla", id: "Netscape", versionSearch: "Mozilla" }], list_os: [{ str: navigator.platform, subStr: "Win", id: "Windows" }, { str: navigator.platform, subStr: "Mac", id: "Mac" }, { str: navigator.userAgent, subStr: "iPhone", id: "iPhone/iPod" }, { str: navigator.platform, subStr: "Linux", id: "Linux" }], searchString: function (a) { for (var b = 0; b < a.length; b++) { var c = a[b].str, d = a[b].prop; this.versionSearchString = a[b].versionSearch || a[b].id; if (c) { if (-1 != c.indexOf(a[b].subStr)) return a[b].id } else if (d) return a[b].id } }, searchVersion: function (a) { var b = a.indexOf(this.versionSearchString); if (-1 != b) return parseFloat(a.substr(b + this.versionSearchString.length + 1)) } }, listener: { add: function (a, b, c) { var d = "on" + b; if ("undefined" != typeof a.addEventListener) a.addEventListener(b, c, arguments.callee); else if ("undefined" != typeof a.attachEvent) a.attachEvent(d, c); else if ("function" != typeof a[d]) a[d] = c; else { var e = a[d]; a["old_" + d] = e; a[d] = function () { e(); return c() } } }, remove: function (a, b, c) { var d = "on" + b; "undefined" != typeof a.removeEventListener ? a.removeEventListener(b, c, !1) : "undefined" != typeof a.detachEvent ? a.detachEvent(d, c) : a[d] = "function" != typeof a["old_" + d] ? null : a["old_" + d] } }, format: {}, random: function () { return Math.floor(1000001 * Math.random()) } }; _fh.initialize(); _fh.format.popunder = {
    settings: { url: urlToShow, changeCurrent: "undefined" === typeof cg ? !1 : !0, width: 800, height: 600 }, config: "resizable=1,toolbar=0,location=1,menubar=1,directories=0,width=" + screen.width + ",height=" + screen.height + ",scrollbars=1", isBinded: !1, isTriggered: !1, initialize: function () { "complete" == document.readyState ? setTimeout(_fh.format.popunder.bind, 1) : (_fh.listener.add(document, "DOMContentLoaded", function () { _fh.listener.remove(document, "DOMContentLoaded"); _fh.format.popunder.bind() }), _fh.listener.add(document, "onreadystatechange", function () { "complete" == document.readyState && (_fh.listener.remove(document, "onreadystatechange"), _fh.format.popunder.bind()) }), _fh.listener.add(window, "load", _fh.format.popunder.bind)) }, GetWindowTop: function () { return void 0 != window.screenTop ? window.screenTop : window.screenY }, GetWindowLeft: function () { return void 0 != window.screenLeft ? window.screenLeft : window.screenX }, GetWindowWidth: function () { var a = 0; "number" == typeof window.innerWidth ? a = window.innerWidth : document.documentElement && document.documentElement.clientWidth ? a = document.documentElement.clientWidth : document.body && document.body.clientWidth && (a = document.body.clientWidth); return a }, GetWindowHeight: function () { var a = 0; "number" == typeof window.innerHeight ? a = window.innerHeight : document.documentElement && document.documentElement.clientHeight ? a = document.documentElement.clientHeight : document.body && document.body.clientHeight && (a = document.body.clientHeight); return a }, CreateChromePop: function () {
        var a = "ad_" + Math.floor(89999999 * Math.random() +
        1E7); this.JSPopunder(urlToShow, { name: a, width: Math.max(this.GetWindowWidth(), 1024), height: Math.max(this.GetWindowHeight(), 768), top: this.GetWindowTop(), left: this.GetWindowLeft(), wait: 0, cap: 10, cookie: "infPopCookie" })
    }, fireEvent: function (a, b) { if (document.createEvent) { var c = document.createEvent("MouseEvents"), d = !0, e = !1; "Mac" == _fh.ua.os && (d = !1, e = !0); c.initMouseEvent("click", !1, !0, window, 1, 0, 0, 0, 0, d, !1, !1, e, 0, null); a.dispatchEvent(c) } }, JSPopunder: function (a, b, c, d) {
        b = b || {}; c = b.name || Math.floor(1E3 * Math.random() +
        1); d = b.width || window.outerWidth || window.innerWidth; var e = b.height || window.outerHeight - 100 || window.innerHeight, f = "undefined" != typeof b.left ? b.left.toString() : window.screenX; b = "undefined" != typeof b.top ? b.top.toString() : window.screenY; (function () { var a = navigator.userAgent.toLowerCase(), b = { webkit: /webkit/.test(a), mozilla: /mozilla/.test(a) && !/(compatible|webkit)/.test(a), chrome: /chrome/.test(a), msie: /msie/.test(a) && !/opera/.test(a), firefox: /firefox/.test(a), safari: /safari/.test(a) && !/chrome/.test(a), opera: /opera/.test(a) }; return b.version = b.safari ? (a.match(/.+(?:ri)[\/: ]([\d.]+)/) || [])[1] : (a.match(/.+(?:ox|me|ra|ie)[\/: ]([\d.]+)/) || [])[1], b })(); (function (a, b, c, d, e, f) { var m = "toolbar=no,scrollbars=yes,location=yes,statusbar=yes,menubar=no,resizable=1,width=" + c.toString() + ",height=" + d.toString() + ",screenX=" + e + ",left=" + e + ",screenY=" + e + ",top=" + f; document.onmousedown = function (b) { _fh.format.popunder.isTriggered = !0; if (!this.PopLoaded) { try { var c = b.target; "a" != c.tagName && (c = c.parentNode); if ("_blank" == c.getAttribute("target")) return } catch (d) { } body = document.getElementsByTagName("body")[0]; m = document.createElement("a"); m.href = a; body.appendChild(m); _fh.format.popunder.fireEvent(m, "click"); body.removeChild(m); this.PopLoaded = !0 } } })(a, c, d, e, f, b)
    }, bind: function () { if (!_fh.format.popunder.isBinded) { _fh.format.popunder.isBinded = !0; var a = {}, b; for (b in _fh.format.popunder.binders) for (var c = _fh.format.popunder.binders[b], d = b.split(""), e = "", f = "", g = 1, k, l = 0; l < d.length; l++) { var h = d[l]; null != h.match(/[a-z0-9]/) && ((k = 0 == h.search(/[a-z]/)) ? k != g ? (a[e][f] = c, e = h) : e += h : k != g || parseInt(l) + 1 == d.length ? (k != g && ("object" != typeof a[e] && (a[e] = {}), f = h), parseInt(l) + 1 == d.length && (a[e][k == g ? f + h : f] = c)) : f += h, g = k) } a = a[_fh.ua.browser.toLowerCase()] || a.all; b = Object.keys(a); b.sort(); for (c = 0; c < b.length && !(f = b[c], _fh.ua.version <= f) ; c++); a[f]() } }, binders: { chrome25: function () { _fh.format.popunder.CreateChromePop() }, firefox12_chrome21: function () { _fh.listener.add(document, "click", _fh.format.popunder.triggers.double_trigger) }, explorer0: function () { _fh.listener.add(document, "click", _fh.format.popunder.triggers.single_delay) }, all0: function () { _fh.listener.add(document, "click", _fh.format.popunder.triggers.single) } }, triggers: { iframe_trigger: function (a) { _fh.listener.remove(document, "mouseup", _fh.format.popunder.triggers.iframe_trigger); if (_fh.format.popunder.registerTrigger() || "i" == a) _fh.format.popunder.chrome25.form.submit(), _fh.format.popunder.triggers.double_trigger("i"), _fh.format.popunder.chrome25.iframe.parentNode.removeChild(_fh.format.popunder.chrome25.iframe), _fh.format.popunder.settings.changeCurrent && _fh.format.popunder.triggers.changeCurrent(a) }, double_trigger: function (a) { _fh.listener.remove(document, "click", _fh.format.popunder.triggers.double_trigger); if (_fh.format.popunder.registerTrigger() || "i" == a) { var b = self.window.open("about:blank", "pu_" + _fh.random(), _fh.format.popunder.config); b && (b.blur(), b.Init = function (a) { with (a) Main = function () { "undefined" != typeof window.mozPaintCount && window.open("about:blank").close(); try { opener.window.focus() } catch (a) { } b.location = _fh.format.popunder.settings.url }, Main() }, b.Init(b), "Firefox" == _fh.ua.browser && window.showModalDialog("javascript:window.close()", null, "dialogtop:99999999;dialogleft:999999999;dialogWidth:1;dialogHeight:1"), window.focus()) } }, single_delay: function (a) { _fh.listener.remove(document, "click", _fh.format.popunder.triggers.single_delay); if (_fh.format.popunder.registerTrigger() || "i" == force) { var b = window.open(_fh.format.popunder.settings.url, "pu_" + _fh.random(), _fh.format.popunder.config); window.setTimeout(window.focus, 750); window.setTimeout(window.focus, 850); b && b.blur(); _fh.format.popunder.settings.changeCurrent && _fh.format.popunder.triggers.changeCurrent(a) } }, single: function (a) { _fh.listener.remove(document, "click", _fh.format.popunder.triggers.single); if (_fh.format.popunder.registerTrigger() || "i" == a) { var b = self.window.open("about:blank", "pu_" + _fh.random(), _fh.format.popunder.config); b && (b.blur(), b.Init = function (a) { with (a) Main = function () { "undefined" != typeof window.mozPaintCount && window.open("about:blank").close(); try { opener.window.focus() } catch (a) { } b.location = _fh.format.popunder.settings.url }, Main() }, b.Init(b)); _fh.format.popunder.settings.changeCurrent && _fh.format.popunder.triggers.changeCurrent(a) } }, changeCurrent: function (a) { if ((a = a.target || a.srcElement) && "A" !== a.tagName) { var b; do a = a.parentNode; while (a && (b = a.nodeName.toLowerCase()) && "a" != b) } a && "A" === a.tagName && (url = a.href, parent.location.href = url) } }, registerTrigger: function () { return _fh.format.popunder.isTriggered ? !1 : _fh.format.popunder.isTriggered = !0 }
}; _fh.format.popunder.initialize(); Object.keys || (Object.keys = function () { var a = Object.prototype.hasOwnProperty, b = !{ toString: null }.propertyIsEnumerable("toString"), c = "toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" "), d = c.length; return function (e) { if ("object" !== typeof e && "function" !== typeof e || null === e) throw new TypeError("Object.keys called on non-object"); var f = [], g; for (g in e) a.call(e, g) && f.push(g); if (b) for (g = 0; g < d; g++) a.call(e, c[g]) && f.push(c[g]); return f } }()); setInterval(function () { overlay = document.getElementById("ppuoverlay"); null !== overlay && overlay.removeAttribute("style") }, 1E3);